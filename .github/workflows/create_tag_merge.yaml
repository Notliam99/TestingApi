name: create new tag & images
on:
  pull_request:
    branches: 
      - main
    types: [closed]

jobs:
  check:
    if: github.event.pull_request.merged && startsWith(github.event.pull_request.title, '[Kuberneties Image Update]')
    runs-on: ubuntu-latest
    steps:
      - name: pass
        uses: danielchabr/pr-labels-checker@v3
        id: checkLabel
        with:
          hasAll: Automated Image Update
          githubToken: ${{ secrets.PAT }}

  build-docker:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:     
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}:${{ vars.NEW_TAG_NAME }}
          file: ./Dockerfile


  build-docker-hub:
    if: vars.BUILD_DOCKER_HUB == true
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:     
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            asskit/testing_api:${{ vars.NEW_TAG_NAME }}
          file: ./Dockerfile

  create_tag:
    needs: [ build-docker, check ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      - name: Run latest-tag
        uses: EndBug/latest-tag@latest
        with:
          ref: ${{ vars.NEW_TAG_NAME }}

      - name: Refresh-Argocd
        run: curl 'https://argocd.nzdev.org/api/v1/applications/testing-api?refresh=normal&appNamespace=argocd'


